import logging

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton

from db.db_utils import get_menu_categories, get_delivery_types, get_products_by_category_as_menu


# –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é
def nav_keyboard(is_admin=False):
    keyboard = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text="–ü—Ä–æ—Å–º–æ—Ç—Ä –º–µ–Ω—é")],
        [KeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤")],
        [KeyboardButton(text="–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞")],
        [KeyboardButton(text="–ö–æ—Ä–∑–∏–Ω–∞")]
    ])

    if is_admin:
        keyboard.keyboard.append([KeyboardButton(text="–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")])

    return keyboard

def categories_keyboard():
    categories = get_menu_categories()

    if not categories:
        return None

    # –†–∞–∑–±–∏–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ 4 —Å—Ç—Ä–æ–∫–∏
    row_width = 4
    rows = [categories[i:i + row_width] for i in range(0, len(categories), row_width)]

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–∏
    for row in rows:
        keyboard.keyboard.append([KeyboardButton(text=name) for _, name in row])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    keyboard.keyboard.append([KeyboardButton(text="–ù–∞–∑–∞–¥")])

    return keyboard

def get_deletion_keyboard(category_id):
    products = get_products_by_category_as_menu(category_id)
    logging.info(f"products: {products}")

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ç—Ä–æ–∫–µ
    row_width = 2
    rows = [products[i:i + row_width] for i in range(0, len(products), row_width)]

    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏: –ø–æ 2 –≤ —Å—Ç—Ä–æ–∫—É
    for row in rows:
        keyboard.keyboard.append([KeyboardButton(text=item["name"]) for item in row])

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" ‚Äî –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π
    keyboard.keyboard.append([KeyboardButton(text="–ù–∞–∑–∞–¥")])

    return keyboard


def get_delivery_type_markup():
    delivery_types = get_delivery_types()  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–∏–ø—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    if delivery_types:
        keyboard = InlineKeyboardMarkup(
            row_width=2,
            inline_keyboard=[
                [InlineKeyboardButton(text=delivery_types['delivery_type'], callback_data=f"delivery_type_{delivery_types['id_type']}")]
                for delivery_type in (delivery_types,
                                      [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="nav_menu()")])
            ]
        )
        return keyboard
    else:
        return None


def delivery_time_keyboard():
    keyboard = InlineKeyboardMarkup(row_width=2, inline_keyboard=[
        [InlineKeyboardButton(text="–ö–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ", callback_data="delivery_time:ASAP")],
        [InlineKeyboardButton(text="–ö –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏", callback_data="delivery_time:scheduled")]
    ])
    buttons = [

    ]
    keyboard.add(*buttons)
    return keyboard

def admin_keyboard() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä"), KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä")],
            [KeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã")]
        ],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ"
    )

# def product_delete_keyboard(product_id):
#     keyboard = InlineKeyboardMarkup()
#     keyboard.add(InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_product:{product_id}"))
#     return keyboard

def get_product_inline_markup(products):
    keyboard = InlineKeyboardMarkup(row_width=2)
    for product in products:
        keyboard.add(InlineKeyboardButton(text=f"–î–æ–±–∞–≤–∏—Ç—å {product['name']} –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data=f"add_to_cart:{product['id_product']}"))
    return keyboard

# def get_cart_item_markup(cart_item_id):
#    markup = InlineKeyboardMarkup()
#    markup.add(InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ", callback_data=f"update_quantity:{cart_item_id}"))
#    markup.add(InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", callback_data=f"remove_from_cart:{cart_item_id}"))
#    return markup

def add_select_button(product_id: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üõí –ü–û–ú–ï–ù–Ø–¢–¨ –¢–£–¢ –ë–£–ö–ê–í–´", callback_data=f"order_{product_id}")]
        ]
    )

def add_cancel_select_button() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_select")]
        ]
    )

def add_order_button(order_id: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", callback_data=f"process_order_{order_id}")]
        ]
    )